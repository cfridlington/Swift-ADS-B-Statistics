// ADS-B Tracking History
// Created by Christopher Fridlington
// cfridlington.com

import Foundation
import ArgumentParser

@main
struct Main: AsyncParsableCommand {
    
    @Option(help: "Specify a different directory where the .json files generated by dump1090-mutability are saved.")
    var inputDirectory: String = "/var/run/dump1090-mutability"
    
    @Option(help: "Specify a different directory where generated files will be saved.")
    var outputDirectory: String = "/var/run/dump1090-mutability"
    
    @Option(help: "Specify a different number of history files generated by dump1090-mutability.")
    var historyFileCount: Int = 120
    
    @Option(help: "Specify a different number of frequent aircraft to be exported.")
    var frequentAircraftCount: Int = 10
    
    @Option(help: "Specify a different number of recent aircraft to be exported.")
    var recentAircraftCount: Int = 10
    
    @Option(help: "Specify a different number of frequent types to be exported.")
    var frequentTypesCount: Int = 10
    
    mutating func run() async throws {
        
        var aircraftRegistry = AircraftRegistry(history: [:], lastUpdated: 0)

        aircraftRegistry.importRegistry(fromDirectory: outputDirectory)
        aircraftRegistry.updateRegistry(fromDirectory: inputDirectory, withNumberOfFiles: historyFileCount)
        await aircraftRegistry.fetchAircraftProperties()
        aircraftRegistry.exportRegistry(toDirectory: outputDirectory)
        aircraftRegistry.exportFrequentTails(toDirectory: outputDirectory, withMaximumCount: frequentAircraftCount)
        aircraftRegistry.exportRecentlyTracked(toDirectory: outputDirectory, withMaximumCount: recentAircraftCount)
        
        var manufacturerRegistry = ManufacturerRegistry()
        manufacturerRegistry.importAircraft(fromRegistry: aircraftRegistry)
        manufacturerRegistry.export(toDirectory: outputDirectory)
        manufacturerRegistry.exportFrequentTypes(toDirectory: outputDirectory, withMaximumCount: frequentTypesCount)
        
        var flightRegistry = FlightPathRegistry()
        flightRegistry.importRegistry(fromDirectory: outputDirectory)
        flightRegistry.updateRegistry(fromDirectory: inputDirectory, withNumberOfFiles: historyFileCount)
        flightRegistry.exportRegistry(toDirectory: outputDirectory)
        
        var statistics = Statistics()
        statistics.generateStatistics(from: aircraftRegistry)
        statistics.generateStatistics(from: manufacturerRegistry)
        statistics.export(toDirectory: outputDirectory)
    }
}
